package com.whilerain.tinychartimport android.content.Contextimport android.graphics.Canvasimport android.graphics.Colorimport android.graphics.Paintimport android.util.AttributeSetimport com.whilerain.tinychart.utils.UiUtilopen class TimeSeriesProgressView @JvmOverloads constructor(    context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : ChartView(context, attrs, defStyleAttr) {    /**     * The animation percent float value between 0 to 1     */    private var percent: Float = 0f    private val paint = Paint().apply {        style = Paint.Style.STROKE        strokeWidth = UiUtil.dpToPx(3).toFloat()    }    init {        if (attrs != null) {            context.theme.obtainStyledAttributes(                attrs,                R.styleable.TimeSeriesProgressView,                0, 0            ).apply {                val color = getColor(R.styleable.TimeSeriesProgressView_progressColor, Color.LTGRAY)                val strokeWidth = getDimension(R.styleable.TimeSeriesProgressView_lineWidth, UiUtil.dpToPx(3).toFloat())                paint.color = color                paint.strokeWidth = strokeWidth            }        }    }    /**     * Update the progress value     * @param p which is between 0 to 1     */    fun onProgressUpdate(p: Float) {        if (p > 1) throw IllegalArgumentException("p should be from 0 to 1")        percent = p        invalidate()    }    override fun onDraw(canvas: Canvas) {        drawProgressLine(canvas)        super.onDraw(canvas)    }    private fun drawProgressLine(canvas: Canvas) {        val x = (chartRect.width() * percent) + chartRect.left        canvas.drawLine(x, chartRect.top, x, chartRect.bottom, paint)    }}